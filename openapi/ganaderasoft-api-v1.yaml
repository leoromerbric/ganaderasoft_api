openapi: 3.0.3
info:
  title: GanaderaSoft API
  description: |
    API Gateway for GanaderaSoft - Comprehensive Livestock Management System
    
    This API provides endpoints for managing users, authentication, fincas (farms), 
    rebaños (herds), animals, inventories, and configuration data.
    
    ## Authentication
    This API uses Laravel Sanctum for authentication. Most endpoints require a Bearer token.
    
    ## User Types
    - `admin`: Full access to all resources
    - `propietario`: Can manage their own resources  
    - `tecnico`: Limited access for technical support
  version: 1.0.0
  contact:
    name: GanaderaSoft Support
    email: support@ganaderasoft.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:8000/api
    description: Local development server
  - url: https://api.ganaderasoft.com/api
    description: Production server

paths:
  /auth/register:
    post:
      tags:
        - Authentication
      summary: Register new user
      description: Register a new user in the system
      operationId: registerUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistrationRequest'
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'

  /auth/login:
    post:
      tags:
        - Authentication
      summary: User login
      description: Authenticate user and get access token
      operationId: loginUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/logout:
    post:
      tags:
        - Authentication
      summary: User logout
      description: Revoke user access token
      operationId: logoutUser
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Logout successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'

  /profile:
    get:
      tags:
        - Authentication
      summary: Get user profile
      description: Get current authenticated user profile
      operationId: getUserProfile
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Profile retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileResponse'

  /composicion-raza:
    get:
      tags:
        - Composición Raza
      summary: List composición raza
      description: Get all composición raza records without filtering by fk_tipo_animal_id or fk_id_Finca
      operationId: listComposicionRaza
      security:
        - bearerAuth: []
      parameters:
        - name: nombre
          in: query
          description: Filter by name
          schema:
            type: string
        - name: page
          in: query
          description: Page number for pagination
          schema:
            type: integer
            minimum: 1
      responses:
        '200':
          description: List retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComposicionRazaListResponse'

    post:
      tags:
        - Composición Raza
      summary: Create composición raza
      description: Create a new composición raza record
      operationId: createComposicionRaza
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComposicionRazaRequest'
      responses:
        '201':
          description: Composición raza created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComposicionRazaResponse'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'

  /composicion-raza/{id}:
    get:
      tags:
        - Composición Raza
      summary: Get composición raza
      description: Get a specific composición raza by ID
      operationId: getComposicionRaza
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Composición raza ID
          schema:
            type: integer
      responses:
        '200':
          description: Composición raza retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComposicionRazaResponse'
        '404':
          description: Composición raza not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    put:
      tags:
        - Composición Raza
      summary: Update composición raza
      description: Update a specific composición raza
      operationId: updateComposicionRaza
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Composición raza ID
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComposicionRazaRequest'
      responses:
        '200':
          description: Composición raza updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComposicionRazaResponse'
        '404':
          description: Composición raza not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'

    delete:
      tags:
        - Composición Raza
      summary: Delete composición raza
      description: Delete a specific composición raza
      operationId: deleteComposicionRaza
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Composición raza ID
          schema:
            type: integer
      responses:
        '200':
          description: Composición raza deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '404':
          description: Composición raza not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Cannot delete - has associated animals
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /configuracion/tipo-explotacion:
    get:
      tags:
        - Configuration
      summary: Get tipo explotación list
      description: Get list of available exploitation types
      operationId: getTipoExplotacion
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationResponse'

  /configuracion/metodo-riego:
    get:
      tags:
        - Configuration
      summary: Get método riego list
      description: Get list of available irrigation methods
      operationId: getMetodoRiego
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationResponse'

  /configuracion/ph-suelo:
    get:
      tags:
        - Configuration
      summary: Get pH suelo list
      description: Get list of soil pH values
      operationId: getPhSuelo
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationResponse'

  /configuracion/textura-suelo:
    get:
      tags:
        - Configuration
      summary: Get textura suelo list
      description: Get list of soil textures
      operationId: getTexturaSuelo
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationResponse'

  /configuracion/fuente-agua:
    get:
      tags:
        - Configuration
      summary: Get fuente agua list
      description: Get list of water sources
      operationId: getFuenteAgua
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationResponse'

  /configuracion/sexo:
    get:
      tags:
        - Configuration
      summary: Get sexo list
      description: Get list of gender options
      operationId: getSexo
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationResponse'

  /configuracion/tipo-relieve:
    get:
      tags:
        - Configuration
      summary: Get tipo relieve list
      description: Get list of terrain relief types (Plano, Ondulado, Montañoso, Otro)
      operationId: getTipoRelieve
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationResponse'
              example:
                success: true
                message: Lista de tipos de relieve obtenida exitosamente
                data:
                  - id: 1
                    valor: Plano
                    descripcion: Terreno plano sin pendientes significativas
                  - id: 2
                    valor: Ondulado
                    descripcion: Terreno con ondulaciones suaves
                  - id: 3
                    valor: Montañoso
                    descripcion: Terreno con pendientes pronunciadas y elevaciones
                  - id: 4
                    valor: Otro
                    descripcion: Otro tipo de relieve no especificado

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    UserRegistrationRequest:
      type: object
      required:
        - name
        - email
        - password
        - password_confirmation
        - type_user
      properties:
        name:
          type: string
          example: Juan Pérez
        email:
          type: string
          format: email
          example: juan@example.com
        password:
          type: string
          minLength: 8
          example: password123
        password_confirmation:
          type: string
          minLength: 8
          example: password123
        type_user:
          type: string
          enum: [admin, propietario, tecnico]
          example: propietario
        image:
          type: string
          nullable: true

    LoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
          example: juan@example.com
        password:
          type: string
          example: password123

    AuthResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: Usuario registrado exitosamente
        data:
          type: object
          properties:
            user:
              $ref: '#/components/schemas/User'
            token:
              type: string
              example: 1|abc123def456...

    UserProfileResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: Perfil de usuario obtenido exitosamente
        data:
          $ref: '#/components/schemas/User'

    User:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Juan Pérez
        email:
          type: string
          format: email
          example: juan@example.com
        type_user:
          type: string
          enum: [admin, propietario, tecnico]
          example: propietario
        image:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    ComposicionRazaRequest:
      type: object
      required:
        - Nombre
      properties:
        Nombre:
          type: string
          maxLength: 30
          example: Holstein
        Siglas:
          type: string
          maxLength: 6
          nullable: true
          example: HOL
        Pelaje:
          type: string
          maxLength: 80
          nullable: true
          example: Negro y blanco
        Proposito:
          type: string
          maxLength: 15
          nullable: true
          example: Leche
        Tipo_Raza:
          type: string
          maxLength: 12
          nullable: true
          example: Bovina
        Origen:
          type: string
          maxLength: 60
          nullable: true
          example: Holanda
        Caracteristica_Especial:
          type: string
          maxLength: 80
          nullable: true
          example: Alta producción láctea
        Proporcion_Raza:
          type: string
          maxLength: 7
          nullable: true
          example: 100%
        fk_id_Finca:
          type: integer
          nullable: true
          example: 1
        fk_tipo_animal_id:
          type: integer
          nullable: true
          example: 1

    ComposicionRaza:
      type: object
      properties:
        id_Composicion:
          type: integer
          example: 1
        Nombre:
          type: string
          example: Holstein
        Siglas:
          type: string
          nullable: true
          example: HOL
        Pelaje:
          type: string
          nullable: true
          example: Negro y blanco
        Proposito:
          type: string
          nullable: true
          example: Leche
        Tipo_Raza:
          type: string
          nullable: true
          example: Bovina
        Origen:
          type: string
          nullable: true
          example: Holanda
        Caracteristica_Especial:
          type: string
          nullable: true
          example: Alta producción láctea
        Proporcion_Raza:
          type: string
          nullable: true
          example: 100%
        fk_id_Finca:
          type: integer
          nullable: true
          example: 1
        fk_tipo_animal_id:
          type: integer
          nullable: true
          example: 1
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        finca:
          type: object
          nullable: true
        tipoAnimal:
          type: object
          nullable: true
        animales:
          type: array
          items:
            type: object

    ComposicionRazaResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: Composición de raza obtenida exitosamente
        data:
          $ref: '#/components/schemas/ComposicionRaza'

    ComposicionRazaListResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: Lista de composiciones de raza obtenida exitosamente
        data:
          type: array
          items:
            $ref: '#/components/schemas/ComposicionRaza'
        pagination:
          type: object
          properties:
            current_page:
              type: integer
              example: 1
            last_page:
              type: integer
              example: 5
            per_page:
              type: integer
              example: 15
            total:
              type: integer
              example: 75

    ConfigurationItem:
      type: object
      properties:
        id:
          type: integer
          example: 1
        valor:
          type: string
          example: Plano
        descripcion:
          type: string
          example: Terreno plano sin pendientes significativas

    ConfigurationResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: Lista obtenida exitosamente
        data:
          type: array
          items:
            $ref: '#/components/schemas/ConfigurationItem'

    SuccessResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: Operación realizada exitosamente

    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: Error en la operación

    ValidationErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: Datos de validación incorrectos
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          example:
            Nombre:
              - El campo Nombre es obligatorio.
            email:
              - El email debe ser una dirección válida.

tags:
  - name: Authentication
    description: User authentication and profile management
  - name: Composición Raza
    description: Breed composition management (now returns all records without filtering)
  - name: Configuration
    description: Configuration data endpoints (JSON-based)